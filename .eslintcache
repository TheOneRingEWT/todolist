[{"/home/gbluser/workspace/todolist/src/index.tsx":"1","/home/gbluser/workspace/todolist/src/reportWebVitals.ts":"2","/home/gbluser/workspace/todolist/src/TodoList.tsx":"3","/home/gbluser/workspace/todolist/src/TodoItem/TodoItem.tsx":"4"},{"size":516,"mtime":1611598998450,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1611598998450,"results":"7","hashOfConfig":"6"},{"size":955,"mtime":1612835815290,"results":"8","hashOfConfig":"6"},{"size":1148,"mtime":1612835391360,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"z990qw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/gbluser/workspace/todolist/src/index.tsx",[],["20","21"],"/home/gbluser/workspace/todolist/src/reportWebVitals.ts",[],"/home/gbluser/workspace/todolist/src/TodoList.tsx",[],"/home/gbluser/workspace/todolist/src/TodoItem/TodoItem.tsx",["22","23"],"import React, { FC, useState } from \"react\";\nimport \"./TodoItem.scss\";\n\nexport interface TodoItemsProps {\n  todo: string;\n  onDoIt: Function\n}\n\nexport const TodoItem: FC<TodoItemsProps> = (props) => {\n  const { todo, onDoIt } = props;\n  const [isUpdating, setIsUpdating] = useState<boolean>(true);\n  const [textValue, setTextValue] = useState<string>(\"\");\n\n  const handleDoItButton = () => {\n    setIsUpdating(false);\n    console.log(\"text\", textValue);\n    setToDoItems([...toDoItems, textValue]);\n  };\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"e.target.value\", e.target.value);\n    setTextValue(e.target.value);\n  };\n\n  return (\n    <div className=\"TodoItem\">\n      <input type=\"checkbox\" data-testid=\"todo-checkbox\" />\n\n      {isUpdating ? (\n        <>\n          <input\n            type=\"text\"\n            data-testid=\"todo-description-input\"\n            value={textValue}\n            onChange={handleTextChange}\n          />\n          <button onClick={handleDoItButton}>Do It!</button>\n        </>\n      ) : (\n        <div>{textValue}</div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoItem;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":10,"column":11,"nodeType":"30","messageId":"31","endLine":10,"endColumn":15},{"ruleId":"28","severity":1,"message":"32","line":10,"column":17,"nodeType":"30","messageId":"31","endLine":10,"endColumn":23},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"@typescript-eslint/no-unused-vars","'todo' is assigned a value but never used.","Identifier","unusedVar","'onDoIt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]